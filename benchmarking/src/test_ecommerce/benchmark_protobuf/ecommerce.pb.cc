// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ecommerce.proto

#include "ecommerce.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {
namespace ecommerce {

inline constexpr EcommerceUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : recent_searches_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        email_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uuid_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EcommerceUser::EcommerceUser(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EcommerceUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcommerceUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcommerceUserDefaultTypeInternal() {}
  union {
    EcommerceUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcommerceUserDefaultTypeInternal _EcommerceUser_default_instance_;

inline constexpr EcommerceProduct::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tags_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_lo_res_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_hi_res_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uuid_{::uint64_t{0u}},
        category_{static_cast< ::protobuf::ecommerce::EcommerceProductCategory >(0)},
        stock_{0u},
        price_{0},
        discount_{0},
        rating_{0u},
        reviews_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EcommerceProduct::EcommerceProduct(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EcommerceProductDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcommerceProductDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcommerceProductDefaultTypeInternal() {}
  union {
    EcommerceProduct _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcommerceProductDefaultTypeInternal _EcommerceProduct_default_instance_;

inline constexpr EcommercePage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        products_{},
        permanent_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        query_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_{nullptr},
        page_{0u},
        total_pages_{0u},
        results_per_page_{0u},
        total_results_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR EcommercePage::EcommercePage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EcommercePageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcommercePageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcommercePageDefaultTypeInternal() {}
  union {
    EcommercePage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcommercePageDefaultTypeInternal _EcommercePage_default_instance_;

inline constexpr EcommercePages::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pages_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EcommercePages::EcommercePages(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EcommercePagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EcommercePagesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EcommercePagesDefaultTypeInternal() {}
  union {
    EcommercePages _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EcommercePagesDefaultTypeInternal _EcommercePages_default_instance_;
}  // namespace ecommerce
}  // namespace protobuf
static ::_pb::Metadata file_level_metadata_ecommerce_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ecommerce_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ecommerce_2eproto = nullptr;
const ::uint32_t TableStruct_ecommerce_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceUser, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceUser, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceUser, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceUser, _impl_.email_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceUser, _impl_.recent_searches_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.uuid_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.category_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.tags_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.image_lo_res_url_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.image_hi_res_url_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.discount_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.stock_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.rating_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommerceProduct, _impl_.reviews_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.permanent_url_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.query_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.page_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.total_pages_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.results_per_page_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.total_results_),
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePage, _impl_.products_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePages, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::protobuf::ecommerce::EcommercePages, _impl_.pages_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::protobuf::ecommerce::EcommerceUser)},
        {12, -1, -1, sizeof(::protobuf::ecommerce::EcommerceProduct)},
        {32, 48, -1, sizeof(::protobuf::ecommerce::EcommercePage)},
        {56, -1, -1, sizeof(::protobuf::ecommerce::EcommercePages)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::ecommerce::_EcommerceUser_default_instance_._instance,
    &::protobuf::ecommerce::_EcommerceProduct_default_instance_._instance,
    &::protobuf::ecommerce::_EcommercePage_default_instance_._instance,
    &::protobuf::ecommerce::_EcommercePages_default_instance_._instance,
};
const char descriptor_table_protodef_ecommerce_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017ecommerce.proto\022\022protobuf.ecommerce\"S\n"
    "\rEcommerceUser\022\014\n\004uuid\030\001 \001(\004\022\014\n\004name\030\002 \001"
    "(\t\022\r\n\005email\030\003 \001(\t\022\027\n\017recent_searches\030\004 \003"
    "(\t\"\226\002\n\020EcommerceProduct\022\014\n\004uuid\030\001 \001(\004\022\014\n"
    "\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022>\n\010cate"
    "gory\030\004 \001(\0162,.protobuf.ecommerce.Ecommerc"
    "eProductCategory\022\014\n\004tags\030\005 \003(\t\022\030\n\020image_"
    "lo_res_url\030\006 \001(\t\022\030\n\020image_hi_res_url\030\007 \001"
    "(\t\022\r\n\005price\030\010 \001(\001\022\020\n\010discount\030\t \001(\001\022\r\n\005s"
    "tock\030\n \001(\r\022\016\n\006rating\030\013 \001(\r\022\017\n\007reviews\030\014 "
    "\001(\r\"\362\001\n\rEcommercePage\022/\n\004user\030\001 \001(\0132!.pr"
    "otobuf.ecommerce.EcommerceUser\022\025\n\rperman"
    "ent_url\030\002 \001(\t\022\r\n\005query\030\003 \001(\t\022\014\n\004page\030\004 \001"
    "(\r\022\023\n\013total_pages\030\005 \001(\r\022\030\n\020results_per_p"
    "age\030\006 \001(\r\022\025\n\rtotal_results\030\007 \001(\r\0226\n\010prod"
    "ucts\030\010 \003(\0132$.protobuf.ecommerce.Ecommerc"
    "eProduct\"B\n\016EcommercePages\0220\n\005pages\030\001 \003("
    "\0132!.protobuf.ecommerce.EcommercePage*\232\001\n"
    "\030EcommerceProductCategory\022\017\n\013ELECTRONICS"
    "\020\000\022\t\n\005BOOKS\020\001\022\014\n\010CLOTHING\020\002\022\010\n\004HOME\020\003\022\n\n"
    "\006GARDEN\020\004\022\010\n\004TOYS\020\005\022\010\n\004FOOD\020\006\022\010\n\004BABY\020\007\022"
    "\010\n\004PETS\020\010\022\n\n\006HEALTH\020\t\022\n\n\006BEAUTY\020\nb\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_ecommerce_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ecommerce_2eproto = {
    false,
    false,
    881,
    descriptor_table_protodef_ecommerce_2eproto,
    "ecommerce.proto",
    &descriptor_table_ecommerce_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_ecommerce_2eproto::offsets,
    file_level_metadata_ecommerce_2eproto,
    file_level_enum_descriptors_ecommerce_2eproto,
    file_level_service_descriptors_ecommerce_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ecommerce_2eproto_getter() {
  return &descriptor_table_ecommerce_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ecommerce_2eproto(&descriptor_table_ecommerce_2eproto);
namespace protobuf {
namespace ecommerce {
const ::google::protobuf::EnumDescriptor* EcommerceProductCategory_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ecommerce_2eproto);
  return file_level_enum_descriptors_ecommerce_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EcommerceProductCategory_internal_data_[] = {
    720896u, 0u, };
bool EcommerceProductCategory_IsValid(int value) {
  return 0 <= value && value <= 10;
}
// ===================================================================

class EcommerceUser::_Internal {
 public:
};

EcommerceUser::EcommerceUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ecommerce.EcommerceUser)
}
inline PROTOBUF_NDEBUG_INLINE EcommerceUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : recent_searches_{visibility, arena, from.recent_searches_},
        name_(arena, from.name_),
        email_(arena, from.email_),
        _cached_size_{0} {}

EcommerceUser::EcommerceUser(
    ::google::protobuf::Arena* arena,
    const EcommerceUser& from)
    : ::google::protobuf::Message(arena) {
  EcommerceUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uuid_ = from._impl_.uuid_;

  // @@protoc_insertion_point(copy_constructor:protobuf.ecommerce.EcommerceUser)
}
inline PROTOBUF_NDEBUG_INLINE EcommerceUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : recent_searches_{visibility, arena},
        name_(arena),
        email_(arena),
        _cached_size_{0} {}

inline void EcommerceUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uuid_ = {};
}
EcommerceUser::~EcommerceUser() {
  // @@protoc_insertion_point(destructor:protobuf.ecommerce.EcommerceUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EcommerceUser::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.email_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EcommerceUser::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ecommerce.EcommerceUser)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recent_searches_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.uuid_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EcommerceUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 65, 2> EcommerceUser::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EcommerceUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string recent_searches = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.recent_searches_)}},
    // uint64 uuid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EcommerceUser, _impl_.uuid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.uuid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.name_)}},
    // string email = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.email_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 uuid = 1;
    {PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string email = 3;
    {PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.email_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string recent_searches = 4;
    {PROTOBUF_FIELD_OFFSET(EcommerceUser, _impl_.recent_searches_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\40\0\4\5\17\0\0\0"
    "protobuf.ecommerce.EcommerceUser"
    "name"
    "email"
    "recent_searches"
  }},
};

::uint8_t* EcommerceUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ecommerce.EcommerceUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 uuid = 1;
  if (this->_internal_uuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_uuid(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceUser.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    const std::string& _s = this->_internal_email();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceUser.email");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // repeated string recent_searches = 4;
  for (int i = 0, n = this->_internal_recent_searches_size(); i < n; ++i) {
    const auto& s = this->_internal_recent_searches().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceUser.recent_searches");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ecommerce.EcommerceUser)
  return target;
}

::size_t EcommerceUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ecommerce.EcommerceUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string recent_searches = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_recent_searches().size());
  for (int i = 0, n = _internal_recent_searches().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_recent_searches().Get(i));
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_email());
  }

  // uint64 uuid = 1;
  if (this->_internal_uuid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_uuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EcommerceUser::_class_data_ = {
    EcommerceUser::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EcommerceUser::GetClassData() const {
  return &_class_data_;
}

void EcommerceUser::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EcommerceUser*>(&to_msg);
  auto& from = static_cast<const EcommerceUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ecommerce.EcommerceUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_recent_searches()->MergeFrom(from._internal_recent_searches());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (from._internal_uuid() != 0) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcommerceUser::CopyFrom(const EcommerceUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ecommerce.EcommerceUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EcommerceUser::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EcommerceUser::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EcommerceUser::InternalSwap(EcommerceUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.recent_searches_.InternalSwap(&other->_impl_.recent_searches_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.email_, &other->_impl_.email_, arena);
        swap(_impl_.uuid_, other->_impl_.uuid_);
}

::google::protobuf::Metadata EcommerceUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ecommerce_2eproto_getter, &descriptor_table_ecommerce_2eproto_once,
      file_level_metadata_ecommerce_2eproto[0]);
}
// ===================================================================

class EcommerceProduct::_Internal {
 public:
};

EcommerceProduct::EcommerceProduct(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ecommerce.EcommerceProduct)
}
inline PROTOBUF_NDEBUG_INLINE EcommerceProduct::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tags_{visibility, arena, from.tags_},
        name_(arena, from.name_),
        description_(arena, from.description_),
        image_lo_res_url_(arena, from.image_lo_res_url_),
        image_hi_res_url_(arena, from.image_hi_res_url_),
        _cached_size_{0} {}

EcommerceProduct::EcommerceProduct(
    ::google::protobuf::Arena* arena,
    const EcommerceProduct& from)
    : ::google::protobuf::Message(arena) {
  EcommerceProduct* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uuid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, uuid_),
           offsetof(Impl_, reviews_) -
               offsetof(Impl_, uuid_) +
               sizeof(Impl_::reviews_));

  // @@protoc_insertion_point(copy_constructor:protobuf.ecommerce.EcommerceProduct)
}
inline PROTOBUF_NDEBUG_INLINE EcommerceProduct::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tags_{visibility, arena},
        name_(arena),
        description_(arena),
        image_lo_res_url_(arena),
        image_hi_res_url_(arena),
        _cached_size_{0} {}

inline void EcommerceProduct::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, uuid_),
           0,
           offsetof(Impl_, reviews_) -
               offsetof(Impl_, uuid_) +
               sizeof(Impl_::reviews_));
}
EcommerceProduct::~EcommerceProduct() {
  // @@protoc_insertion_point(destructor:protobuf.ecommerce.EcommerceProduct)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EcommerceProduct::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.image_lo_res_url_.Destroy();
  _impl_.image_hi_res_url_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EcommerceProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ecommerce.EcommerceProduct)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.image_lo_res_url_.ClearToEmpty();
  _impl_.image_hi_res_url_.ClearToEmpty();
  ::memset(&_impl_.uuid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.reviews_) -
      reinterpret_cast<char*>(&_impl_.uuid_)) + sizeof(_impl_.reviews_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EcommerceProduct::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 103, 2> EcommerceProduct::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EcommerceProduct_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 uuid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EcommerceProduct, _impl_.uuid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.uuid_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.name_)}},
    // string description = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.description_)}},
    // .protobuf.ecommerce.EcommerceProductCategory category = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommerceProduct, _impl_.category_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.category_)}},
    // repeated string tags = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.tags_)}},
    // string image_lo_res_url = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.image_lo_res_url_)}},
    // string image_hi_res_url = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.image_hi_res_url_)}},
    // double price = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.price_)}},
    // double discount = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.discount_)}},
    // uint32 stock = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommerceProduct, _impl_.stock_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.stock_)}},
    // uint32 rating = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommerceProduct, _impl_.rating_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.rating_)}},
    // uint32 reviews = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommerceProduct, _impl_.reviews_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.reviews_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 uuid = 1;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.uuid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .protobuf.ecommerce.EcommerceProductCategory category = 4;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated string tags = 5;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.tags_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string image_lo_res_url = 6;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.image_lo_res_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string image_hi_res_url = 7;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.image_hi_res_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 8;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double discount = 9;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.discount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // uint32 stock = 10;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.stock_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 rating = 11;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.rating_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 reviews = 12;
    {PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.reviews_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\43\0\4\13\0\4\20\20\0\0\0\0\0\0\0\0"
    "protobuf.ecommerce.EcommerceProduct"
    "name"
    "description"
    "tags"
    "image_lo_res_url"
    "image_hi_res_url"
  }},
};

::uint8_t* EcommerceProduct::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ecommerce.EcommerceProduct)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 uuid = 1;
  if (this->_internal_uuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_uuid(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceProduct.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceProduct.description");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .protobuf.ecommerce.EcommerceProductCategory category = 4;
  if (this->_internal_category() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_category(), target);
  }

  // repeated string tags = 5;
  for (int i = 0, n = this->_internal_tags_size(); i < n; ++i) {
    const auto& s = this->_internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceProduct.tags");
    target = stream->WriteString(5, s, target);
  }

  // string image_lo_res_url = 6;
  if (!this->_internal_image_lo_res_url().empty()) {
    const std::string& _s = this->_internal_image_lo_res_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceProduct.image_lo_res_url");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string image_hi_res_url = 7;
  if (!this->_internal_image_hi_res_url().empty()) {
    const std::string& _s = this->_internal_image_hi_res_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommerceProduct.image_hi_res_url");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // double price = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_price(), target);
  }

  // double discount = 9;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  ::uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        9, this->_internal_discount(), target);
  }

  // uint32 stock = 10;
  if (this->_internal_stock() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_stock(), target);
  }

  // uint32 rating = 11;
  if (this->_internal_rating() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_rating(), target);
  }

  // uint32 reviews = 12;
  if (this->_internal_reviews() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        12, this->_internal_reviews(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ecommerce.EcommerceProduct)
  return target;
}

::size_t EcommerceProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ecommerce.EcommerceProduct)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 5;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_tags().size());
  for (int i = 0, n = _internal_tags().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_tags().Get(i));
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string image_lo_res_url = 6;
  if (!this->_internal_image_lo_res_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_image_lo_res_url());
  }

  // string image_hi_res_url = 7;
  if (!this->_internal_image_hi_res_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_image_hi_res_url());
  }

  // uint64 uuid = 1;
  if (this->_internal_uuid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_uuid());
  }

  // .protobuf.ecommerce.EcommerceProductCategory category = 4;
  if (this->_internal_category() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_category());
  }

  // uint32 stock = 10;
  if (this->_internal_stock() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_stock());
  }

  // double price = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    total_size += 9;
  }

  // double discount = 9;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  ::uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    total_size += 9;
  }

  // uint32 rating = 11;
  if (this->_internal_rating() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_rating());
  }

  // uint32 reviews = 12;
  if (this->_internal_reviews() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_reviews());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EcommerceProduct::_class_data_ = {
    EcommerceProduct::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EcommerceProduct::GetClassData() const {
  return &_class_data_;
}

void EcommerceProduct::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EcommerceProduct*>(&to_msg);
  auto& from = static_cast<const EcommerceProduct&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ecommerce.EcommerceProduct)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_image_lo_res_url().empty()) {
    _this->_internal_set_image_lo_res_url(from._internal_image_lo_res_url());
  }
  if (!from._internal_image_hi_res_url().empty()) {
    _this->_internal_set_image_hi_res_url(from._internal_image_hi_res_url());
  }
  if (from._internal_uuid() != 0) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (from._internal_category() != 0) {
    _this->_internal_set_category(from._internal_category());
  }
  if (from._internal_stock() != 0) {
    _this->_internal_set_stock(from._internal_stock());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = from._internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    _this->_internal_set_price(from._internal_price());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_discount = from._internal_discount();
  ::uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    _this->_internal_set_discount(from._internal_discount());
  }
  if (from._internal_rating() != 0) {
    _this->_internal_set_rating(from._internal_rating());
  }
  if (from._internal_reviews() != 0) {
    _this->_internal_set_reviews(from._internal_reviews());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcommerceProduct::CopyFrom(const EcommerceProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ecommerce.EcommerceProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EcommerceProduct::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EcommerceProduct::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EcommerceProduct::InternalSwap(EcommerceProduct* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_lo_res_url_, &other->_impl_.image_lo_res_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_hi_res_url_, &other->_impl_.image_hi_res_url_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.reviews_)
      + sizeof(EcommerceProduct::_impl_.reviews_)
      - PROTOBUF_FIELD_OFFSET(EcommerceProduct, _impl_.uuid_)>(
          reinterpret_cast<char*>(&_impl_.uuid_),
          reinterpret_cast<char*>(&other->_impl_.uuid_));
}

::google::protobuf::Metadata EcommerceProduct::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ecommerce_2eproto_getter, &descriptor_table_ecommerce_2eproto_once,
      file_level_metadata_ecommerce_2eproto[1]);
}
// ===================================================================

class EcommercePage::_Internal {
 public:
  using HasBits = decltype(std::declval<EcommercePage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_._has_bits_);
  static const ::protobuf::ecommerce::EcommerceUser& user(const EcommercePage* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::protobuf::ecommerce::EcommerceUser& EcommercePage::_Internal::user(const EcommercePage* msg) {
  return *msg->_impl_.user_;
}
EcommercePage::EcommercePage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ecommerce.EcommercePage)
}
inline PROTOBUF_NDEBUG_INLINE EcommercePage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        products_{visibility, arena, from.products_},
        permanent_url_(arena, from.permanent_url_),
        query_(arena, from.query_) {}

EcommercePage::EcommercePage(
    ::google::protobuf::Arena* arena,
    const EcommercePage& from)
    : ::google::protobuf::Message(arena) {
  EcommercePage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::protobuf::ecommerce::EcommerceUser>(arena, *from._impl_.user_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_),
           offsetof(Impl_, total_results_) -
               offsetof(Impl_, page_) +
               sizeof(Impl_::total_results_));

  // @@protoc_insertion_point(copy_constructor:protobuf.ecommerce.EcommercePage)
}
inline PROTOBUF_NDEBUG_INLINE EcommercePage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        products_{visibility, arena},
        permanent_url_(arena),
        query_(arena) {}

inline void EcommercePage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, total_results_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::total_results_));
}
EcommercePage::~EcommercePage() {
  // @@protoc_insertion_point(destructor:protobuf.ecommerce.EcommercePage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EcommercePage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.permanent_url_.Destroy();
  _impl_.query_.Destroy();
  delete _impl_.user_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EcommercePage::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ecommerce.EcommercePage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.products_.Clear();
  _impl_.permanent_url_.ClearToEmpty();
  _impl_.query_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  ::memset(&_impl_.page_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_results_) -
      reinterpret_cast<char*>(&_impl_.page_)) + sizeof(_impl_.total_results_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EcommercePage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 67, 2> EcommercePage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EcommercePage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf.ecommerce.EcommerceProduct products = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.products_)}},
    // .protobuf.ecommerce.EcommerceUser user = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.user_)}},
    // string permanent_url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.permanent_url_)}},
    // string query = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.query_)}},
    // uint32 page = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommercePage, _impl_.page_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.page_)}},
    // uint32 total_pages = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommercePage, _impl_.total_pages_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.total_pages_)}},
    // uint32 results_per_page = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommercePage, _impl_.results_per_page_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.results_per_page_)}},
    // uint32 total_results = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EcommercePage, _impl_.total_results_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.total_results_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .protobuf.ecommerce.EcommerceUser user = 1;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string permanent_url = 2;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.permanent_url_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string query = 3;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.query_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 page = 4;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.page_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 total_pages = 5;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.total_pages_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 results_per_page = 6;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.results_per_page_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 total_results = 7;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.total_results_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .protobuf.ecommerce.EcommerceProduct products = 8;
    {PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.products_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf::ecommerce::EcommerceUser>()},
    {::_pbi::TcParser::GetTable<::protobuf::ecommerce::EcommerceProduct>()},
  }}, {{
    "\40\0\15\5\0\0\0\0\0\0\0\0\0\0\0\0"
    "protobuf.ecommerce.EcommercePage"
    "permanent_url"
    "query"
  }},
};

::uint8_t* EcommercePage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ecommerce.EcommercePage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .protobuf.ecommerce.EcommerceUser user = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // string permanent_url = 2;
  if (!this->_internal_permanent_url().empty()) {
    const std::string& _s = this->_internal_permanent_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommercePage.permanent_url");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string query = 3;
  if (!this->_internal_query().empty()) {
    const std::string& _s = this->_internal_query();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ecommerce.EcommercePage.query");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // uint32 page = 4;
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_page(), target);
  }

  // uint32 total_pages = 5;
  if (this->_internal_total_pages() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_total_pages(), target);
  }

  // uint32 results_per_page = 6;
  if (this->_internal_results_per_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_results_per_page(), target);
  }

  // uint32 total_results = 7;
  if (this->_internal_total_results() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_total_results(), target);
  }

  // repeated .protobuf.ecommerce.EcommerceProduct products = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_products_size()); i < n; i++) {
    const auto& repfield = this->_internal_products().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ecommerce.EcommercePage)
  return target;
}

::size_t EcommercePage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ecommerce.EcommercePage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf.ecommerce.EcommerceProduct products = 8;
  total_size += 1UL * this->_internal_products_size();
  for (const auto& msg : this->_internal_products()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string permanent_url = 2;
  if (!this->_internal_permanent_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_permanent_url());
  }

  // string query = 3;
  if (!this->_internal_query().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_query());
  }

  // .protobuf.ecommerce.EcommerceUser user = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
  }

  // uint32 page = 4;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_page());
  }

  // uint32 total_pages = 5;
  if (this->_internal_total_pages() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_total_pages());
  }

  // uint32 results_per_page = 6;
  if (this->_internal_results_per_page() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_results_per_page());
  }

  // uint32 total_results = 7;
  if (this->_internal_total_results() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_total_results());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EcommercePage::_class_data_ = {
    EcommercePage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EcommercePage::GetClassData() const {
  return &_class_data_;
}

void EcommercePage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EcommercePage*>(&to_msg);
  auto& from = static_cast<const EcommercePage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ecommerce.EcommercePage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_products()->MergeFrom(
      from._internal_products());
  if (!from._internal_permanent_url().empty()) {
    _this->_internal_set_permanent_url(from._internal_permanent_url());
  }
  if (!from._internal_query().empty()) {
    _this->_internal_set_query(from._internal_query());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_user()->::protobuf::ecommerce::EcommerceUser::MergeFrom(
        from._internal_user());
  }
  if (from._internal_page() != 0) {
    _this->_internal_set_page(from._internal_page());
  }
  if (from._internal_total_pages() != 0) {
    _this->_internal_set_total_pages(from._internal_total_pages());
  }
  if (from._internal_results_per_page() != 0) {
    _this->_internal_set_results_per_page(from._internal_results_per_page());
  }
  if (from._internal_total_results() != 0) {
    _this->_internal_set_total_results(from._internal_total_results());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcommercePage::CopyFrom(const EcommercePage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ecommerce.EcommercePage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EcommercePage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EcommercePage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EcommercePage::InternalSwap(EcommercePage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.products_.InternalSwap(&other->_impl_.products_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.permanent_url_, &other->_impl_.permanent_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.query_, &other->_impl_.query_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.total_results_)
      + sizeof(EcommercePage::_impl_.total_results_)
      - PROTOBUF_FIELD_OFFSET(EcommercePage, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata EcommercePage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ecommerce_2eproto_getter, &descriptor_table_ecommerce_2eproto_once,
      file_level_metadata_ecommerce_2eproto[2]);
}
// ===================================================================

class EcommercePages::_Internal {
 public:
};

EcommercePages::EcommercePages(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ecommerce.EcommercePages)
}
inline PROTOBUF_NDEBUG_INLINE EcommercePages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : pages_{visibility, arena, from.pages_},
        _cached_size_{0} {}

EcommercePages::EcommercePages(
    ::google::protobuf::Arena* arena,
    const EcommercePages& from)
    : ::google::protobuf::Message(arena) {
  EcommercePages* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:protobuf.ecommerce.EcommercePages)
}
inline PROTOBUF_NDEBUG_INLINE EcommercePages::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pages_{visibility, arena},
        _cached_size_{0} {}

inline void EcommercePages::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EcommercePages::~EcommercePages() {
  // @@protoc_insertion_point(destructor:protobuf.ecommerce.EcommercePages)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EcommercePages::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void EcommercePages::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ecommerce.EcommercePages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* EcommercePages::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> EcommercePages::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_EcommercePages_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .protobuf.ecommerce.EcommercePage pages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EcommercePages, _impl_.pages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .protobuf.ecommerce.EcommercePage pages = 1;
    {PROTOBUF_FIELD_OFFSET(EcommercePages, _impl_.pages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::protobuf::ecommerce::EcommercePage>()},
  }}, {{
  }},
};

::uint8_t* EcommercePages::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ecommerce.EcommercePages)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .protobuf.ecommerce.EcommercePage pages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pages_size()); i < n; i++) {
    const auto& repfield = this->_internal_pages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ecommerce.EcommercePages)
  return target;
}

::size_t EcommercePages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.ecommerce.EcommercePages)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protobuf.ecommerce.EcommercePage pages = 1;
  total_size += 1UL * this->_internal_pages_size();
  for (const auto& msg : this->_internal_pages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData EcommercePages::_class_data_ = {
    EcommercePages::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* EcommercePages::GetClassData() const {
  return &_class_data_;
}

void EcommercePages::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<EcommercePages*>(&to_msg);
  auto& from = static_cast<const EcommercePages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ecommerce.EcommercePages)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pages()->MergeFrom(
      from._internal_pages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EcommercePages::CopyFrom(const EcommercePages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ecommerce.EcommercePages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool EcommercePages::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* EcommercePages::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void EcommercePages::InternalSwap(EcommercePages* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pages_.InternalSwap(&other->_impl_.pages_);
}

::google::protobuf::Metadata EcommercePages::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ecommerce_2eproto_getter, &descriptor_table_ecommerce_2eproto_once,
      file_level_metadata_ecommerce_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ecommerce
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
