// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obj3d.proto
// Protobuf C++ Version: 4.25.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_obj3d_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_obj3d_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025002 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_obj3d_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_obj3d_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_obj3d_2eproto;
namespace protobuf {
namespace obj3d {
class FVec3;
struct FVec3DefaultTypeInternal;
extern FVec3DefaultTypeInternal _FVec3_default_instance_;
class Face;
struct FaceDefaultTypeInternal;
extern FaceDefaultTypeInternal _Face_default_instance_;
class IVec3;
struct IVec3DefaultTypeInternal;
extern IVec3DefaultTypeInternal _IVec3_default_instance_;
class Obj3D;
struct Obj3DDefaultTypeInternal;
extern Obj3DDefaultTypeInternal _Obj3D_default_instance_;
}  // namespace obj3d
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {
namespace obj3d {

// ===================================================================


// -------------------------------------------------------------------

class IVec3 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.obj3d.IVec3) */ {
 public:
  inline IVec3() : IVec3(nullptr) {}
  ~IVec3() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IVec3(::google::protobuf::internal::ConstantInitialized);

  inline IVec3(const IVec3& from)
      : IVec3(nullptr, from) {}
  IVec3(IVec3&& from) noexcept
    : IVec3() {
    *this = ::std::move(from);
  }

  inline IVec3& operator=(const IVec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline IVec3& operator=(IVec3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IVec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const IVec3* internal_default_instance() {
    return reinterpret_cast<const IVec3*>(
               &_IVec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IVec3& a, IVec3& b) {
    a.Swap(&b);
  }
  inline void Swap(IVec3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IVec3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IVec3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IVec3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IVec3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IVec3& from) {
    IVec3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IVec3* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf.obj3d.IVec3";
  }
  protected:
  explicit IVec3(::google::protobuf::Arena* arena);
  IVec3(::google::protobuf::Arena* arena, const IVec3& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int64 x = 1;
  void clear_x() ;
  ::int64_t x() const;
  void set_x(::int64_t value);

  private:
  ::int64_t _internal_x() const;
  void _internal_set_x(::int64_t value);

  public:
  // int64 y = 2;
  void clear_y() ;
  ::int64_t y() const;
  void set_y(::int64_t value);

  private:
  ::int64_t _internal_y() const;
  void _internal_set_y(::int64_t value);

  public:
  // int64 z = 3;
  void clear_z() ;
  ::int64_t z() const;
  void set_z(::int64_t value);

  private:
  ::int64_t _internal_z() const;
  void _internal_set_z(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.obj3d.IVec3)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t x_;
    ::int64_t y_;
    ::int64_t z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obj3d_2eproto;
};// -------------------------------------------------------------------

class FVec3 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.obj3d.FVec3) */ {
 public:
  inline FVec3() : FVec3(nullptr) {}
  ~FVec3() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FVec3(::google::protobuf::internal::ConstantInitialized);

  inline FVec3(const FVec3& from)
      : FVec3(nullptr, from) {}
  FVec3(FVec3&& from) noexcept
    : FVec3() {
    *this = ::std::move(from);
  }

  inline FVec3& operator=(const FVec3& from) {
    CopyFrom(from);
    return *this;
  }
  inline FVec3& operator=(FVec3&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FVec3& default_instance() {
    return *internal_default_instance();
  }
  static inline const FVec3* internal_default_instance() {
    return reinterpret_cast<const FVec3*>(
               &_FVec3_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FVec3& a, FVec3& b) {
    a.Swap(&b);
  }
  inline void Swap(FVec3* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FVec3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FVec3* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FVec3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FVec3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FVec3& from) {
    FVec3::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FVec3* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf.obj3d.FVec3";
  }
  protected:
  explicit FVec3(::google::protobuf::Arena* arena);
  FVec3(::google::protobuf::Arena* arena, const FVec3& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double y = 2;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double z = 3;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.obj3d.FVec3)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obj3d_2eproto;
};// -------------------------------------------------------------------

class Face final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.obj3d.Face) */ {
 public:
  inline Face() : Face(nullptr) {}
  ~Face() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Face(::google::protobuf::internal::ConstantInitialized);

  inline Face(const Face& from)
      : Face(nullptr, from) {}
  Face(Face&& from) noexcept
    : Face() {
    *this = ::std::move(from);
  }

  inline Face& operator=(const Face& from) {
    CopyFrom(from);
    return *this;
  }
  inline Face& operator=(Face&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Face& default_instance() {
    return *internal_default_instance();
  }
  static inline const Face* internal_default_instance() {
    return reinterpret_cast<const Face*>(
               &_Face_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Face& a, Face& b) {
    a.Swap(&b);
  }
  inline void Swap(Face* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Face* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Face* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Face>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Face& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Face& from) {
    Face::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Face* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf.obj3d.Face";
  }
  protected:
  explicit Face(::google::protobuf::Arena* arena);
  Face(::google::protobuf::Arena* arena, const Face& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVerticeIndexFieldNumber = 1,
    kNormalIndexFieldNumber = 2,
  };
  // .protobuf.obj3d.IVec3 vertice_index = 1;
  bool has_vertice_index() const;
  void clear_vertice_index() ;
  const ::protobuf::obj3d::IVec3& vertice_index() const;
  PROTOBUF_NODISCARD ::protobuf::obj3d::IVec3* release_vertice_index();
  ::protobuf::obj3d::IVec3* mutable_vertice_index();
  void set_allocated_vertice_index(::protobuf::obj3d::IVec3* value);
  void unsafe_arena_set_allocated_vertice_index(::protobuf::obj3d::IVec3* value);
  ::protobuf::obj3d::IVec3* unsafe_arena_release_vertice_index();

  private:
  const ::protobuf::obj3d::IVec3& _internal_vertice_index() const;
  ::protobuf::obj3d::IVec3* _internal_mutable_vertice_index();

  public:
  // .protobuf.obj3d.IVec3 normal_index = 2;
  bool has_normal_index() const;
  void clear_normal_index() ;
  const ::protobuf::obj3d::IVec3& normal_index() const;
  PROTOBUF_NODISCARD ::protobuf::obj3d::IVec3* release_normal_index();
  ::protobuf::obj3d::IVec3* mutable_normal_index();
  void set_allocated_normal_index(::protobuf::obj3d::IVec3* value);
  void unsafe_arena_set_allocated_normal_index(::protobuf::obj3d::IVec3* value);
  ::protobuf::obj3d::IVec3* unsafe_arena_release_normal_index();

  private:
  const ::protobuf::obj3d::IVec3& _internal_normal_index() const;
  ::protobuf::obj3d::IVec3* _internal_mutable_normal_index();

  public:
  // @@protoc_insertion_point(class_scope:protobuf.obj3d.Face)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::protobuf::obj3d::IVec3* vertice_index_;
    ::protobuf::obj3d::IVec3* normal_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obj3d_2eproto;
};// -------------------------------------------------------------------

class Obj3D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protobuf.obj3d.Obj3D) */ {
 public:
  inline Obj3D() : Obj3D(nullptr) {}
  ~Obj3D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Obj3D(::google::protobuf::internal::ConstantInitialized);

  inline Obj3D(const Obj3D& from)
      : Obj3D(nullptr, from) {}
  Obj3D(Obj3D&& from) noexcept
    : Obj3D() {
    *this = ::std::move(from);
  }

  inline Obj3D& operator=(const Obj3D& from) {
    CopyFrom(from);
    return *this;
  }
  inline Obj3D& operator=(Obj3D&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Obj3D& default_instance() {
    return *internal_default_instance();
  }
  static inline const Obj3D* internal_default_instance() {
    return reinterpret_cast<const Obj3D*>(
               &_Obj3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Obj3D& a, Obj3D& b) {
    a.Swap(&b);
  }
  inline void Swap(Obj3D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Obj3D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Obj3D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Obj3D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Obj3D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Obj3D& from) {
    Obj3D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Obj3D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "protobuf.obj3d.Obj3D";
  }
  protected:
  explicit Obj3D(::google::protobuf::Arena* arena);
  Obj3D(::google::protobuf::Arena* arena, const Obj3D& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVerticesFieldNumber = 1,
    kNormalsFieldNumber = 2,
    kFacesFieldNumber = 3,
  };
  // repeated .protobuf.obj3d.FVec3 vertices = 1;
  int vertices_size() const;
  private:
  int _internal_vertices_size() const;

  public:
  void clear_vertices() ;
  ::protobuf::obj3d::FVec3* mutable_vertices(int index);
  ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 >*
      mutable_vertices();
  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>& _internal_vertices() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>* _internal_mutable_vertices();
  public:
  const ::protobuf::obj3d::FVec3& vertices(int index) const;
  ::protobuf::obj3d::FVec3* add_vertices();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 >&
      vertices() const;
  // repeated .protobuf.obj3d.FVec3 normals = 2;
  int normals_size() const;
  private:
  int _internal_normals_size() const;

  public:
  void clear_normals() ;
  ::protobuf::obj3d::FVec3* mutable_normals(int index);
  ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 >*
      mutable_normals();
  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>& _internal_normals() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>* _internal_mutable_normals();
  public:
  const ::protobuf::obj3d::FVec3& normals(int index) const;
  ::protobuf::obj3d::FVec3* add_normals();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 >&
      normals() const;
  // repeated .protobuf.obj3d.Face faces = 3;
  int faces_size() const;
  private:
  int _internal_faces_size() const;

  public:
  void clear_faces() ;
  ::protobuf::obj3d::Face* mutable_faces(int index);
  ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::Face >*
      mutable_faces();
  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>& _internal_faces() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>* _internal_mutable_faces();
  public:
  const ::protobuf::obj3d::Face& faces(int index) const;
  ::protobuf::obj3d::Face* add_faces();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::Face >&
      faces() const;
  // @@protoc_insertion_point(class_scope:protobuf.obj3d.Obj3D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 > vertices_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::FVec3 > normals_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::obj3d::Face > faces_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_obj3d_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IVec3

// int64 x = 1;
inline void IVec3::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = ::int64_t{0};
}
inline ::int64_t IVec3::x() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.IVec3.x)
  return _internal_x();
}
inline void IVec3::set_x(::int64_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.IVec3.x)
}
inline ::int64_t IVec3::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void IVec3::_internal_set_x(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// int64 y = 2;
inline void IVec3::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = ::int64_t{0};
}
inline ::int64_t IVec3::y() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.IVec3.y)
  return _internal_y();
}
inline void IVec3::set_y(::int64_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.IVec3.y)
}
inline ::int64_t IVec3::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void IVec3::_internal_set_y(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// int64 z = 3;
inline void IVec3::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = ::int64_t{0};
}
inline ::int64_t IVec3::z() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.IVec3.z)
  return _internal_z();
}
inline void IVec3::set_z(::int64_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.IVec3.z)
}
inline ::int64_t IVec3::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void IVec3::_internal_set_z(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// FVec3

// double x = 1;
inline void FVec3::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline double FVec3::x() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.FVec3.x)
  return _internal_x();
}
inline void FVec3::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.FVec3.x)
}
inline double FVec3::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void FVec3::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// double y = 2;
inline void FVec3::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline double FVec3::y() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.FVec3.y)
  return _internal_y();
}
inline void FVec3::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.FVec3.y)
}
inline double FVec3::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void FVec3::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// double z = 3;
inline void FVec3::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline double FVec3::z() const {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.FVec3.z)
  return _internal_z();
}
inline void FVec3::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:protobuf.obj3d.FVec3.z)
}
inline double FVec3::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void FVec3::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// Face

// .protobuf.obj3d.IVec3 vertice_index = 1;
inline bool Face::has_vertice_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vertice_index_ != nullptr);
  return value;
}
inline void Face::clear_vertice_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.vertice_index_ != nullptr) _impl_.vertice_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::protobuf::obj3d::IVec3& Face::_internal_vertice_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf::obj3d::IVec3* p = _impl_.vertice_index_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf::obj3d::IVec3&>(::protobuf::obj3d::_IVec3_default_instance_);
}
inline const ::protobuf::obj3d::IVec3& Face::vertice_index() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.Face.vertice_index)
  return _internal_vertice_index();
}
inline void Face::unsafe_arena_set_allocated_vertice_index(::protobuf::obj3d::IVec3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vertice_index_);
  }
  _impl_.vertice_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.obj3d.Face.vertice_index)
}
inline ::protobuf::obj3d::IVec3* Face::release_vertice_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf::obj3d::IVec3* released = _impl_.vertice_index_;
  _impl_.vertice_index_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf::obj3d::IVec3* Face::unsafe_arena_release_vertice_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf.obj3d.Face.vertice_index)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::protobuf::obj3d::IVec3* temp = _impl_.vertice_index_;
  _impl_.vertice_index_ = nullptr;
  return temp;
}
inline ::protobuf::obj3d::IVec3* Face::_internal_mutable_vertice_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.vertice_index_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf::obj3d::IVec3>(GetArena());
    _impl_.vertice_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(p);
  }
  return _impl_.vertice_index_;
}
inline ::protobuf::obj3d::IVec3* Face::mutable_vertice_index() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf::obj3d::IVec3* _msg = _internal_mutable_vertice_index();
  // @@protoc_insertion_point(field_mutable:protobuf.obj3d.Face.vertice_index)
  return _msg;
}
inline void Face::set_allocated_vertice_index(::protobuf::obj3d::IVec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf::obj3d::IVec3*>(_impl_.vertice_index_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf::obj3d::IVec3*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vertice_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf.obj3d.Face.vertice_index)
}

// .protobuf.obj3d.IVec3 normal_index = 2;
inline bool Face::has_normal_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.normal_index_ != nullptr);
  return value;
}
inline void Face::clear_normal_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.normal_index_ != nullptr) _impl_.normal_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::protobuf::obj3d::IVec3& Face::_internal_normal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::protobuf::obj3d::IVec3* p = _impl_.normal_index_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf::obj3d::IVec3&>(::protobuf::obj3d::_IVec3_default_instance_);
}
inline const ::protobuf::obj3d::IVec3& Face::normal_index() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.Face.normal_index)
  return _internal_normal_index();
}
inline void Face::unsafe_arena_set_allocated_normal_index(::protobuf::obj3d::IVec3* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.normal_index_);
  }
  _impl_.normal_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.obj3d.Face.normal_index)
}
inline ::protobuf::obj3d::IVec3* Face::release_normal_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf::obj3d::IVec3* released = _impl_.normal_index_;
  _impl_.normal_index_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::protobuf::obj3d::IVec3* Face::unsafe_arena_release_normal_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:protobuf.obj3d.Face.normal_index)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::protobuf::obj3d::IVec3* temp = _impl_.normal_index_;
  _impl_.normal_index_ = nullptr;
  return temp;
}
inline ::protobuf::obj3d::IVec3* Face::_internal_mutable_normal_index() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.normal_index_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf::obj3d::IVec3>(GetArena());
    _impl_.normal_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(p);
  }
  return _impl_.normal_index_;
}
inline ::protobuf::obj3d::IVec3* Face::mutable_normal_index() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::protobuf::obj3d::IVec3* _msg = _internal_mutable_normal_index();
  // @@protoc_insertion_point(field_mutable:protobuf.obj3d.Face.normal_index)
  return _msg;
}
inline void Face::set_allocated_normal_index(::protobuf::obj3d::IVec3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::protobuf::obj3d::IVec3*>(_impl_.normal_index_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::protobuf::obj3d::IVec3*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.normal_index_ = reinterpret_cast<::protobuf::obj3d::IVec3*>(value);
  // @@protoc_insertion_point(field_set_allocated:protobuf.obj3d.Face.normal_index)
}

// -------------------------------------------------------------------

// Obj3D

// repeated .protobuf.obj3d.FVec3 vertices = 1;
inline int Obj3D::_internal_vertices_size() const {
  return _internal_vertices().size();
}
inline int Obj3D::vertices_size() const {
  return _internal_vertices_size();
}
inline void Obj3D::clear_vertices() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vertices_.Clear();
}
inline ::protobuf::obj3d::FVec3* Obj3D::mutable_vertices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.obj3d.Obj3D.vertices)
  return _internal_mutable_vertices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>* Obj3D::mutable_vertices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.obj3d.Obj3D.vertices)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vertices();
}
inline const ::protobuf::obj3d::FVec3& Obj3D::vertices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.Obj3D.vertices)
  return _internal_vertices().Get(index);
}
inline ::protobuf::obj3d::FVec3* Obj3D::add_vertices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::protobuf::obj3d::FVec3* _add = _internal_mutable_vertices()->Add();
  // @@protoc_insertion_point(field_add:protobuf.obj3d.Obj3D.vertices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>& Obj3D::vertices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.obj3d.Obj3D.vertices)
  return _internal_vertices();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>&
Obj3D::_internal_vertices() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vertices_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>*
Obj3D::_internal_mutable_vertices() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vertices_;
}

// repeated .protobuf.obj3d.FVec3 normals = 2;
inline int Obj3D::_internal_normals_size() const {
  return _internal_normals().size();
}
inline int Obj3D::normals_size() const {
  return _internal_normals_size();
}
inline void Obj3D::clear_normals() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.normals_.Clear();
}
inline ::protobuf::obj3d::FVec3* Obj3D::mutable_normals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.obj3d.Obj3D.normals)
  return _internal_mutable_normals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>* Obj3D::mutable_normals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.obj3d.Obj3D.normals)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_normals();
}
inline const ::protobuf::obj3d::FVec3& Obj3D::normals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.Obj3D.normals)
  return _internal_normals().Get(index);
}
inline ::protobuf::obj3d::FVec3* Obj3D::add_normals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::protobuf::obj3d::FVec3* _add = _internal_mutable_normals()->Add();
  // @@protoc_insertion_point(field_add:protobuf.obj3d.Obj3D.normals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>& Obj3D::normals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.obj3d.Obj3D.normals)
  return _internal_normals();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>&
Obj3D::_internal_normals() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.normals_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::FVec3>*
Obj3D::_internal_mutable_normals() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.normals_;
}

// repeated .protobuf.obj3d.Face faces = 3;
inline int Obj3D::_internal_faces_size() const {
  return _internal_faces().size();
}
inline int Obj3D::faces_size() const {
  return _internal_faces_size();
}
inline void Obj3D::clear_faces() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.faces_.Clear();
}
inline ::protobuf::obj3d::Face* Obj3D::mutable_faces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.obj3d.Obj3D.faces)
  return _internal_mutable_faces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>* Obj3D::mutable_faces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.obj3d.Obj3D.faces)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_faces();
}
inline const ::protobuf::obj3d::Face& Obj3D::faces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.obj3d.Obj3D.faces)
  return _internal_faces().Get(index);
}
inline ::protobuf::obj3d::Face* Obj3D::add_faces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::protobuf::obj3d::Face* _add = _internal_mutable_faces()->Add();
  // @@protoc_insertion_point(field_add:protobuf.obj3d.Obj3D.faces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>& Obj3D::faces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.obj3d.Obj3D.faces)
  return _internal_faces();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>&
Obj3D::_internal_faces() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.faces_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::obj3d::Face>*
Obj3D::_internal_mutable_faces() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.faces_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace obj3d
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_obj3d_2eproto_2epb_2eh
